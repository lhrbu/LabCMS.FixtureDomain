// <auto-generated />
using System;
using LabCMS.FixtureDomain.Server.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LabCMS.FixtureDomain.Server.Migrations
{
    [DbContext(typeof(FixtureDomainRepository))]
    partial class FixtureDomainRepositoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.7.21378.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("LabCMS.FixtureDomain.Shared.Models.Fixture", b =>
                {
                    b.Property<int>("No")
                        .HasColumnType("integer");

                    b.Property<string>("AssetNo")
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("FloorNo")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SetIndex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ShelfNo")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StorageInformation")
                        .HasColumnType("text");

                    b.Property<string>("TestField")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("No");

                    b.HasIndex("ProjectShortName");

                    b.HasIndex("TestField");

                    b.ToTable("Fixtures");
                });

            modelBuilder.Entity("LabCMS.FixtureDomain.Shared.Models.FixtureEventInDatabase", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentTypeFullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FixtureNo")
                        .HasColumnType("integer");

                    b.HasKey("No");

                    b.HasIndex("ContentTypeFullName");

                    b.HasIndex("FixtureNo");

                    b.ToTable("FixtureEventsInDatabase");
                });

            modelBuilder.Entity("LabCMS.FixtureDomain.Shared.Models.Role", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int[]>("ResponsibleTestFields")
                        .HasColumnType("integer[]");

                    b.HasKey("Name");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LabCMS.FixtureDomain.Shared.Models.FixtureEventInDatabase", b =>
                {
                    b.HasOne("LabCMS.FixtureDomain.Shared.Models.Fixture", "Fixture")
                        .WithMany()
                        .HasForeignKey("FixtureNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fixture");
                });
#pragma warning restore 612, 618
        }
    }
}
